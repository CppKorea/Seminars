# Copyright (c) 2021 Chanjung Kim. All rights reserved.
# Licensed under the MIT License.

cmake_minimum_required(VERSION 3.13)
project(easy-v8-embedding)

# -------------------- C++ Standard -------------------- #
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

# --------------------      v8      -------------------- #
set(V8_VERSION "8.7.220.3")
if (CMAKE_BUILD_TYPE MATCHES "Debug")
    set(V8_CONFIG_STR "x64.debug")
    set(V8_IS_DEBUG ON)
else()
    set(V8_CONFIG_STR "x64.release")
    set(V8_IS_DEBUG OFF)
endif()
set(V8_TARGET_NAME "v8_monolith")
set(V8_IS_COMPONENT_BUILD OFF)
set(V8_TARGET_CPU "x64")
set(V8_USE_CUSTOM_LIBCXX OFF)
if (WIN32)
    set(V8_IS_CLANG OFF)
    set(V8_USE_LLD OFF)
else()
    set(V8_IS_CLANG ON)
    set(V8_USE_LLD ON)
endif()
set(V8_V8_MONOLITHIC ON)
set(V8_V8_USE_EXTERNAL_STARTUP_DATA OFF)
if (WIN32)
    set(V8_ROOT "$ENV{USERPROFILE}/v8")
else()
    set(V8_ROOT "$ENV{HOME}/v8")
endif()
file(MAKE_DIRECTORY ${V8_ROOT})
add_subdirectory(Dependencies/v8-cmake)
add_library(v8 INTERFACE)
target_include_directories(v8 INTERFACE ${V8_INCLUDE_DIRS})
target_compile_definitions(v8 INTERFACE ${V8_COMPILE_DEFINITIONS})
target_link_libraries(v8 INTERFACE v8_monolith)
if (WIN32)
    target_compile_definitions(v8 INTERFACE -D_ITERATOR_DEBUG_LEVEL=0)
    target_link_libraries(v8 INTERFACE winmm dbghelp)
else()
    target_link_libraries(v8 INTERFACE pthread)
endif()
target_link_directories(v8 INTERFACE ${V8_LIBRARY_DIRS})

# --------------------   Examples   -------------------- #
add_subdirectory(Examples/1-run-javascript)
add_subdirectory(Examples/2-expose-cpp-to-javascript)
add_subdirectory(Examples/3-use-es6-modules)
add_subdirectory(Examples/4-es6-modules-with-cpp)
add_subdirectory(Examples/5-impl-set-timeout)
add_subdirectory(Examples/6-promises)
add_subdirectory(Examples/7-use-cpp-classes-on-javascript)
